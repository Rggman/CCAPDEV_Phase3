<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GameRevs</title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
</head>
    <body>
        <header>
            <nav class="navbar section-content">
                <a href="#" class="nav-logo">
                    <h2 class="logo-text">GameRevs</h2>
                </a>
                <button class="burger-menu" id="burger-menu">
                    <i class="fas fa-bars"></i>  
                </button>
                <ul class="nav-menu" id="nav-menu">
                    {{#if (eq user.profileType "Admin")}}
                        <li class="nav-item">
                            <a href="/adminhome" class="nav-link">Admin</a>
                        </li>
                    {{/if}}

                    {{#if (eq user.profileType "Guest")}}
                        <li class="nav-item">
                            <a href="/login" class="nav-link">Log In</a>
                        </li>
                    {{else}}
                        <li class="nav-item">
                            <a href="/logout" class="nav-link">Log Out</a>
                        </li>
                    {{/if}}

                    <li class="nav-item">
                        <a href="/home" class="nav-link">Home</a>
                    </li>
                    <li class="nav-item">
                    <a href="/gamespage" class="nav-link">Games</a>
                    </li>
                    <li class="nav-item search-bar">
                        <div class="search-container">
                            <input type="text" placeholder="Search users..." class="search-input" id="search-bar">
                        <div class="search-results" id="search-results"></div> <!-- Suggestions appear here -->
                        </div>
                    </li>
                    <li class="nav-item profile-picture">
                        {{#if (neq user.profileType "Guest")}}
                            <a href="/profile/{{user.username}}">
                                <img src="{{user.profilePicture}}" alt="Profile" class="profile-picture" id="header-profile-img-preview">
                            </a>
                        {{else}}
                            <a href="/profile">
                                <img src="{{user.profilePicture}}" alt="Profile" class="profile-picture" id="header-profile-img-preview">
                            </a>
                        {{/if}}
                    </li>
                </ul>
            </nav>
        </header>
        <script>
            document.getElementById("burger-menu").addEventListener("click", function() {
                document.getElementById("nav-menu").classList.toggle("active");
            });
        </script>
            <!-- MAIN CONTENT -->

        <main>
            <div class="manage-main-container">
                <form id="gameForm" action="/edit-game/{{game.title}}" method="POST" enctype="multipart/form-data">
                    <div class="main-container">
                        <h2>Manage Game</h2>
                        
                        <div class="image-preview">
                            <div class="preview-banner">
                                <label>Game Banner</label>
                                <img id="cover-preview" src="{{game.coverImage}}" alt="Cover Image" class="manage-banner">
                                <p id="cover-filename">{{ removePath game.coverImage}}</p>
                                <button type="button" onclick="document.getElementById('cover-input').click()" class="change-banner">Change Banner</button>
                                <input type="file" name="coverImage" id="cover-input" style="display: none;" accept="image/*" onchange="updatePreview('cover')">
                            </div>

                            <div class="preview-background">
                                <label>Background Image</label>
                                <img id="background-preview" src="{{game.backgroundImage}}" alt="Background Image" class="manage-background">
                                <p id="background-filename">{{ removePath game.backgroundImage}}</p>
                                <button type="button" onclick="document.getElementById('background-input').click()" class="change-background">Change Background</button>
                                <input type="file" name="backgroundImage" id="background-input" style="display: none;" accept="image/*" onchange="updatePreview('background')">
                            </div>
                        </div>
                    </div>

                    <div class="main-container">
                        <h2>Manage Game</h2>

                        <div class="form-container game-title">
                            <label>Game Title</label>
                            <input type="text" name="title" value="{{game.title}}" placeholder="Enter game title" id="game-title" required>
                        </div>

                        <div class="form-container release-date">
                            <label>Release Date</label> 
                            <input type="date" name="releasedAt" value="{{formatDate game.releasedAt}}" id="release-date" required>
                        </div>

                        <div class="form-container developer">
                            <label>Developers</label>
                            <input type="text" name="developers" value="{{game.developers}}" placeholder="Enter game developers" id="game-developers" required>
                        </div>

                        <div class="form-container description">
                            <label>Description</label>
                            <textarea name="description" placeholder="Enter game description..." id="game-description" required>{{game.description}}</textarea>
                        </div>

                        <div class="form-container platforms">
                            <label>Platforms</label>
                            <div class="checkbox platforms-checkbox">
                                <label><input type="checkbox" name="platforms[]" value="PC" 
                                    {{#if (includes game.platforms "PC")}}checked{{/if}}>
                                    PC
                                </label>
                                <label><input type="checkbox" name="platforms[]" value="PlayStation 5" 
                                    {{#if (includes game.platforms "PlayStation 5")}}checked{{/if}}>
                                    PlayStation 5
                                </label>
                                <label><input type="checkbox" name="platforms[]" value="Xbox Series"
                                    {{#if (includes game.platforms "Xbox Series")}}checked{{/if}}> 
                                    Xbox Series
                                </label>
                            </div>
                        </div>

                        <div class="form-container genres">
                            <label>Genres</label>
                            <div class="checkbox genres-checkbox">
                                <label class="genre"><input type="checkbox" name="genres[]" value="Action" 
                                    {{#if (includes game.genres "Action")}}checked{{/if}}>
                                    Action
                                </label>
                                <label class="genre"><input type="checkbox" name="genres[]" value="Adventure" 
                                    {{#if (includes game.genres "Adventure")}}checked{{/if}}>
                                    Adventure
                                </label>
                                <label class="genre"><input type="checkbox" name="genres[]" value="Arcade"
                                    {{#if (includes game.genres "Arcade")}}checked{{/if}}> 
                                    Arcade
                                </label>
                                <label class="genre"><input type="checkbox" name="genres[]" value="Card & Board Game" 
                                    {{#if (includes game.genres "Card & Board Game")}}checked{{/if}}>
                                    Card & Board Game
                                </label>
                                <label class="genre"><input type="checkbox" name="genres[]" value="Fighting"
                                    {{#if (includes game.genres "Fighting")}}checked{{/if}}>
                                    Fighting
                                </label>
                                <label class="genre"><input type="checkbox" name="genres[]" value="Indie"
                                    {{#if (includes game.genres "Indie")}}checked{{/if}}>
                                    Indie
                                </label>
                                <label class="genre"><input type="checkbox" name="genres[]" value="MOBA"
                                    {{#if (includes game.genres "MOBA")}}checked{{/if}}>
                                    MOBA
                                </label>
                                <label class="genre"><input type="checkbox" name="genres[]" value="Puzzle"
                                    {{#if (includes game.genres "Puzzle")}}checked{{/if}}>
                                    Puzzle
                                </label>
                                <label class="genre"><input type="checkbox" name="genres[]" value="Racing"
                                    {{#if (includes game.genres "Racing")}}checked{{/if}}>
                                    Racing
                                </label>
                                <label class="genre"><input type="checkbox" name="genres[]" value="Shooter"
                                    {{#if (includes game.genres "Shooter")}}checked{{/if}}>
                                    Shooter
                                </label>
                                <label class="genre"><input type="checkbox" name="genres[]" value="Sport"
                                    {{#if (includes game.genres "Sport")}}checked{{/if}}>
                                    Sport
                                </label>
                                <label class="genre"><input type="checkbox" name="genres[]" value="Strategy"
                                    {{#if (includes game.genres "Strategy")}}checked{{/if}}>
                                    Strategy
                                </label>
                                <label class="genre"><input type="checkbox" name="genres[]" value="RPG"
                                    {{#if (includes game.genres "RPG")}}checked{{/if}}>
                                    RPG
                                </label>
                            </div>
                        </div>

                        <div class="btn-container">
                            <button type="submit" class="btn-save">Save</button>
                            <button type="button" class="btn-cancel" onclick="location.href='/admingame'">Cancel</button>
                            <button type="button" class="btn-delete" data-title="{{game.title}}">Delete</button>
                        </div>
                    </div>
                </form>
            </div>
        </main>

        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script src="/js/search.js"></script>

        <script>
            function updatePreview(type) {
                const input = document.getElementById(type + '-input');
                const preview = document.getElementById(type + '-preview');
                const filenameLabel = document.getElementById(type + '-filename');

                if (input.files && input.files[0]) {
                    const file = input.files[0];
                    const validImageTypes = ["image/jpeg", "image/png", "image/gif"];

                    if (!validImageTypes.includes(file.type)) {
                        Swal.fire({
                            icon: "error",
                            title: "Invalid File",
                            text: "Please upload a valid image file (JPEG, PNG, GIF).",
                            confirmButtonColor: "#d33"
                        });

                        input.value = "";  // Reset the file input field
                        return;
                    }

                    filenameLabel.textContent = file.name;
                    preview.src = URL.createObjectURL(file);
                }
            }
        </script>
        <script>
            document.querySelector('form').addEventListener('submit', function (event) {
                // Remove any previously added hidden inputs to prevent duplication
                document.querySelectorAll('input[type="hidden"][name="platforms"], input[type="hidden"][name="genres"]').forEach(input => input.remove());

                // Collect checked values
                const selectedPlatforms = Array.from(document.querySelectorAll('input[name="platforms[]"]:checked'))
                    .map(checkbox => {
                        checkbox.disabled = true; // Prevents duplication
                        return checkbox.value;
                    });

                const selectedGenres = Array.from(document.querySelectorAll('input[name="genres[]"]:checked'))
                    .map(checkbox => {
                        checkbox.disabled = true; // Prevents duplication
                        return checkbox.value;
                    });

                // Append the checked values to hidden inputs before form submission
                selectedPlatforms.forEach(platform => {
                    const input = document.createElement('input');
                    input.type = 'hidden';
                    input.name = 'platforms'; // No '[]' brackets
                    input.value = platform;
                    this.appendChild(input);
                });

                selectedGenres.forEach(genre => {
                    const input = document.createElement('input');
                    input.type = 'hidden';
                    input.name = 'genres'; // No '[]' brackets
                    input.value = genre;
                    this.appendChild(input);
                });

                // ✅ Let the form submit normally
            });
        </script>
        <script>
            document.querySelector('.btn-delete').addEventListener('click', function () {
                if (confirm('Are you sure you want to delete this game?')) {
                    // Get the game title from the form
                    const gameTitle = this.getAttribute('data-title');

                    // Send a DELETE request using Fetch API
                    fetch(`/delete-game/${gameTitle}`, {
                        method: 'DELETE',
                    })
                    .then(response => {
                        // After a successful deletion, redirect manually
                        window.location.href = '/admingame?success=Game Deleted Successfully!';
                    })
                    .catch(err => {
                        console.error("Error deleting game:", err);
                        window.location.href = '/admingame?error=Failed to delete game';
                    });
                }
            });
        </script>
    </body>
</html>